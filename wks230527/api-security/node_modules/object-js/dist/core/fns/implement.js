'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = implement;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _Class = require('../Class');

var _Class2 = _interopRequireDefault(_Class);

var _doesImplement = require('./doesImplement');

var _doesImplement2 = _interopRequireDefault(_doesImplement);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//-------------------------------------------------------------------------------
// Function
//-------------------------------------------------------------------------------

/**
 * @param {function(new:T)} constructor
 * @param {function(new:Implementable)} implementable
 * @template {T}
 */
function implement(constructor, implementable) {
  var _class = _Class2.default.get(constructor);
  if ((0, _doesImplement2.default)(constructor, implementable)) {
    throw new Error('Interface \'' + implementable.getName() + '\' has already been implemented by \n      the class \'' + _class.getName() + '\'');
  }
  for (var methodName in implementable.prototype) {
    if (!_lodash2.default.isFunction(constructor.prototype[methodName])) {
      throw new Error('Class \'' + _class.getName() + '\' does not implement method \'\n        ' + methodName + '\' of interface \'' + implementable.getInterface().getName() + '\'');
    }
  }
  _class.getInterfaces().push(implementable.getInterface());
} //-------------------------------------------------------------------------------
// Imports
//-------------------------------------------------------------------------------
//# sourceMappingURL=implement.js.map
