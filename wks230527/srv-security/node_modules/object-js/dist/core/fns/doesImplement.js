'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = doesImplement;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _Class = require('../Class');

var _Class2 = _interopRequireDefault(_Class);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//-------------------------------------------------------------------------------
// Function
//-------------------------------------------------------------------------------

/**
 * @param {*} value
 * @param {function(new:Implementable)} implementable
 * @return {boolean}
 */
//-------------------------------------------------------------------------------
// Imports
//-------------------------------------------------------------------------------

function doesImplement(value, implementable) {
  if (_lodash2.default.isObject(value)) {
    var _class = _Class2.default.get(value);
    if (_class.name !== 'Object') {
      while (_class) {
        for (var i = 0, size = _class.getInterfaces().length; i < size; i++) {
          var interfaceImplementable = _class.getInterfaces()[i].getImplementable();
          var implementableInstance = new interfaceImplementable();

          //NOTE BRN: This both checks for top level interfaces as well as super interfaces
          if (implementableInstance instanceof implementable) {
            return true;
          }
        }
        _class = _class.getSuperclass();
      }
    } else {
      var methods = new implementable();
      var result = true;
      _lodash2.default.forIn(methods, function (method, name) {
        if (!_lodash2.default.isFunction(value[name])) {
          result = false;
          return false;
        }
      });
      return result;
    }
  }
  return false;
}
//# sourceMappingURL=doesImplement.js.map
